const window_bar = require('window-bar')
const project_card = require('project-card')

const sheet = new CSSStyleSheet
sheet.replaceSync(get_theme())
/******************************************************************************
  APP PROJECTS MINI COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const default_opts = { }

module.exports = app_projects_mini

function app_projects_mini (opts = default_opts) {
  // ----------------------------------------
  // ID + JSON STATE
  // ----------------------------------------
  const id = count++
  // ----------------------------------------
  // OPTS
  // ----------------------------------------
  const { data } = opts
  // Assigning all the icons
  const { img_src: {
    icon_discord = `${prefix}/icon_discord.png`,
    icon_twitter = `${prefix}/icon_twitter.png`,
    icon_github = `${prefix}/icon_github.png`,
    icon_folder = `${prefix}/icon_folder.svg`,
    project_logo_1 = `${prefix}/project_logo_1.png`,
  } } = data
  // ----------------------------------------
  // PROTOCOL
  // ----------------------------------------
  const PROTOCOL = {}
  // ----------------------------------------
  // TEMPLATE
  // ----------------------------------------
  const el = document.createElement('div')
  const shopts = { mode: 'closed' }
  const shadow = el.attachShadow(shopts)
  shadow.adoptedStyleSheets = [sheet]
  shadow.innerHTML = `
  <div class="windowbar"></div>
  <div class="main_wrapper">
    <div class="project_wrapper"></div>
  </div>`
  const project_wrapper = shadow.querySelector('.project_wrapper')
  // ----------------------------------------
  const windowbar_shadow = shadow.querySelector('.windowbar').attachShadow(shopts)
  // ----------------------------------------
  // ELEMENTS
  // ----------------------------------------
  // Adding Applicatin window Bar
  const cover_window = window_bar({
    name:'OUR PROJECTS', 
    src: icon_folder,
    action_buttons: ['View more (12)'],
    data: data
  }, projects_mini_protocol)
  // Adding project cards
  const cardsData = [{ 
    title: 'Official starting of the web course.',
    project_logo: project_logo_1,
    data: data,
    project: 'Agregore', 
    link: '/',
    socials: [icon_github, icon_twitter, icon_discord],
    desc: 'Keep track of whānau whakapapa information, preserve and share cultural records and narratives, own and control whānau data and servers, and build a stronger sense of whānau, community and identity.', 
    tags: ['Hypercore', 'Hypercore', 'Hypercore'],
  },{ 
    title: 'Official starting of the web course.',
    project_logo: project_logo_1,
    data: data,
    project: 'Agregore', 
    link: '/',
    socials: [icon_github, icon_twitter, icon_discord],
    desc: 'Keep track of whānau whakapapa information, preserve and share cultural records and narratives, own and control whānau data and servers, and build a stronger sense of whānau, community and identity.', 
    tags: ['Hypercore', 'Hypercore', 'Hypercore'],
  },{ 
    title: 'Official starting of the web course.',
    project_logo: project_logo_1,
    data: data,
    project: 'Agregore', 
    link: '/',
    socials: [icon_github, icon_twitter, icon_discord],
    desc: 'Keep track of whānau whakapapa information, preserve and share cultural records and narratives, own and control whānau data and servers, and build a stronger sense of whānau, community and identity.', 
    tags: ['Hypercore', 'Hypercore', 'Hypercore'],
  }]
  project_wrapper.append(...cardsData.map(project_card).map(shadowfy()))
  windowbar_shadow.append(cover_window)
  // ----------------------------------------
  // INIT
  // ----------------------------------------

  return el

  function shadowfy (props = {}, sheets = []) {
    return element => {
      const el = Object.assign(document.createElement('div'), { ...props })
      const sh = el.attachShadow(shopts)
      sh.adoptedStyleSheets = sheets
      sh.append(element)
      return el
    }
  }
  // projects mini protocol
  function projects_mini_protocol (message, send) {
    return listen
  }
  // Listening to toggle event 
  function listen (message) {
    const { head, refs, type, data, meta } = message  
    const PROTOCOL = {
      'toggle_active_state': toggle_active_state
    }
    const action = PROTOCOL[type] || invalid      
    action(message)
  }
  function invalid (message) { console.error('invalid type', message) }
  async function toggle_active_state (message) {
    const { head, refs, type, data, meta } = message
    const { active_state } = data
    ;( active_state === 'active') ? el.style.display = 'none': ''
  }
}
function get_theme () {
  return `
    .main_wrapper {
      box-sizing: border-box;
      container-type: inline-size;
      width: 100%;
      height: 100%;
      * {
        box-sizing: border-box;
      }

      .project_wrapper {
        --s: 20px; /* control the size */
        --_g: var(--bg_color) /* first color */ 0 25%, #0000 0 50%;
        background:
          repeating-conic-gradient(at 66% 66%,var(--_g)),
          repeating-conic-gradient(at 33% 33%,var(--_g)),
          var(--primary_color);  /* second color */ 
        background-size: var(--s) var(--s);  
        border: 1px solid var(--primary_color);
        width: 100%;
        height: 100%;
        padding: 0px;
        display: grid;
        gap: 20px;
        grid-template-columns: 12fr;
        margin-bottom: 30px;
        box-sizing: border-box;
      }
    }
    @container (min-width: 768px) {
      .main_wrapper {
        .project_wrapper {
          grid-template-columns: repeat(2, 6fr);
        }
      }
    }
    @container (min-width: 1200px) {
      .main_wrapper {
        .project_wrapper {
          grid-template-columns: repeat(3, 4fr);
        }
      }
    }
  `
}