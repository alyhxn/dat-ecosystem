const window_bar = require('window-bar')

// CSS Boiler Plat
const sheet = new CSSStyleSheet
sheet.replaceSync(get_theme())

let id = 0

module.exports = important_documents

function important_documents (opts, protocol) {
  const name = `important_documents`
  protocol({ from: name }, listen)
  function listen () {
    important_documents_wrapper.style.display = 'inline'
  }
  const { data } = opts
  // Assigning all the icons
  const { img_src } = data
  const {
    icon_pdf_reader
  } = img_src
  const el = document.createElement('div')
  const shadow = el.attachShadow ({ mode : 'closed' })
  shadow.innerHTML = `
    <div class="important_documents">
      <div class="documents_content">
        <h2>Visit links for more info</h2>
        <ol type="1">
          <li>Manifesto</li>
          <li>Organization github repository</li>
        </ol>  
      </div>
    </div>
    <style> ${get_theme()} </style>
  `
  const window = window_bar({
    name: 'important_documents.md', 
    src: icon_pdf_reader,
    data: data
  }, important_documents_protocol)
  const important_documents_wrapper = shadow.querySelector('.important_documents')
  important_documents_wrapper.prepend(window)
  shadow.adoptedStyleSheets = [sheet]

    return el

  // cover protocol
  function important_documents_protocol (message, send) {
    return listen
    // Listening to toggle event 
    function listen (message) {
      const { head, refs, type, data, meta } = message  
      const PROTOCOL = {
        'toggle_active_state': toggle_active_state
      }
      const action = PROTOCOL[type] || invalid      
      action(message)
    }
    function invalid (message) { console.error('invalid type', message) }
    async function toggle_active_state (message) {
      const { head, refs, type, data, meta } = message
      const { active_state } = data
      ;( active_state === 'active')?important_documents_wrapper.style.display = 'none':''
    }
  }
}
function get_theme () {
  return`
    * {
      box-sizing: border-box;
    }
    .important_documents {
      display: none;
      .documents_content {
        position: relative;
        display: flex;
        width: 100vw;
        height: 100vh;
        flex-direction: column;
        padding: 10px;
        background-size: 10px 10px;
        background-color: var(--bg_color);
        border: 1px solid var(--primary_color);
        margin-bottom: 30px;
        h2 {
          margin: 0;
        }
      }
    }
    @container (min-width: 510px) {
      .important_documents {
        .documents_content {
          width: auto;
          height: auto;
        }
      }
    }
  `
}