module.exports = consortium_page

const mission_statement = require('mission_statement')
const important_documents = require('important_documents')
const our_member = require('our_member')
const tools = require('tools')

function consortium_page (opts, protocol) {

    // Image data
    const {data} = opts
    const {img_src} = data
    const {
        icon_pdf_reader,
        icon_folder,
    } = img_src

    // Communication data
    const PROTOCOLS = {}

    const el = document.createElement('div')
    const shadow = el.attachShadow({mode: 'closed'})

    // adding a `main_wrapper` 
    shadow.innerHTML = `
        <div class="main_wrapper">
            <div class="icon_wrapper">
            </div>
            <div class="popup_wrapper">
                <div class="mini_popup_wrapper">
                </div>
            </div>
        </div>
        <style>${get_theme()}</style>
    `


    const icons_data = [
        {
            name: 'mission_ statement',
            type: '.md',
            img: icon_pdf_reader,
            window: 'mission_statement'
        },
        {
            name: 'important_ documents',
            type: '.md',
            img: icon_pdf_reader,
            window: 'important_documents'
        },
        {
            name: 'our_ member',
            type: '.md',
            img: icon_pdf_reader,
            window: 'our_member'
        },
        {
            name: 'tools',
            type: '',
            img: icon_folder,
            window: 'tools'
        },
    ]

    const icon_wrapper = shadow.querySelector('.icon_wrapper')
    icons_data.forEach((icon_data) => {
        const icon = document.createElement('div')
        icon.classList.add('icon')
        icon.innerHTML = `
            ${icon_data.img}
            <span>${icon_data.name}${icon_data.type}</span>
        `
        icon.ondblclick = () => {PROTOCOLS['notify_'+icon_data.window]()}
        icon.ontouchend = () => {PROTOCOLS['notify_'+icon_data.window]()}
        icon_wrapper.append(icon)
    })

    const mini_popup_wrapper = shadow.querySelector('.mini_popup_wrapper')
    mini_popup_wrapper.append(
        important_documents({data}, consortium_protocol), 
        our_member({data}, consortium_protocol),
        tools({data}, consortium_protocol)
    )

    const popup_wrapper = shadow.querySelector('.popup_wrapper')
    popup_wrapper.append(mission_statement({data}, consortium_protocol))

    
    // shadow.adoptedStyleSheets = [sheet]
    return el

    function consortium_protocol (handshake, send, mid=0){
        PROTOCOLS['notify_'+handshake.from] = send
    }
}

function get_theme() {
    return `
        .main_wrapper{
            display: flex;
            gap: 20px;
            flex-direction: column;
            justify-content: space-between;
            margin: 0;
            padding:30px 10px;
            opacity: 1;
            background-image: radial-gradient(var(--primary_color) 2px, var(--bg_color) 2px);
            background-size: 16px 16px;
        }
        .icon_wrapper{
            display: flex;
            flex-wrap: wrap;
            flex-direction: row;
            gap: 25px;
            width: fit-content;
            height: fit-content;
            align-items: center;
            user-select: none;
        }
        .icon{
            display: flex;
            flex-direction: column;
            align-items: center;
            
        }
        .icon span{
            background-color: var(--bg_color);
            width: 150px;
            padding: 10px 0;
            text-align: center;
            word-wrap: break-word;
        }
        .icon_wrapper:hover{
            cursor: default;
        }
        .popup_wrapper {
            display: inline;
            position: absolute;
            top: 42px;
            left: 0;
            z-index: 20;
        }
        .mini_popup_wrapper {
            display: flex;
            flex-direction: column;
            width: 100%;
        }
        svg{
            height: 50px;
            width: 50px;
            margin: 5px 0;
            background-color: white;

        }
        svg path{
            fill: black;
        }
        @media (min-width: 510px){
            .icon_wrapper{
                flex-direction: column;
            }
            .main_wrapper{
                flex-direction: row;
            }
            .popup_wrapper{
                display: flex;
                flex-direction: column;
                position: relative;
                top: 0;
            }
        }
        @media (min-width: 768px){
            .popup_wrapper{
                margin-left: 100px;
            }
        }

        @media (min-width: 1200px){
            .popup_wrapper{
                flex-direction: row;
                gap: 20px;
                margin-left: 200px;
            }
        }
    `
}