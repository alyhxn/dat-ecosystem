const mission_statement = require('mission-statement')
const important_documents = require('important-documents')
const our_member = require('our-members')
const tools = require('tools')
const app_icon = require('app-icon')

const sheet = new CSSStyleSheet
sheet.replaceSync(get_theme())
/******************************************************************************
  WINDOW BAR COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const default_opts = { }

module.exports = consortium_page

function consortium_page (opts = default_opts, protocol) {
  // ----------------------------------------
  // ID + JSON STATE
  // ----------------------------------------
  const id = count++
  // ----------------------------------------
  // OPTS
  // ----------------------------------------
  // Image data
  const { data } = opts
  const { img_src } = data
  const {
    icon_pdf_reader,
    icon_folder,
  } = img_src
  // ----------------------------------------
  // PROTOCOL
  // ----------------------------------------
  // Communication data
  const PROTOCOLS = {}
  // ----------------------------------------
  // TEMPLATE
  // ----------------------------------------
  const el = document.createElement('div')
  const shopts = { mode: 'closed' }
  const shadow = el.attachShadow(shopts)
  shadow.adoptedStyleSheets = [sheet]
  shadow.innerHTML = `<div class="main_wrapper">
    <div class="icon_wrapper"></div>
    <div class="popup_wrapper">
      <div class="mini_popup_wrapper"></div>
    </div>
  </div>`
  const popup_wrapper = shadow.querySelector('.popup_wrapper')
  const mini_popup_wrapper = shadow.querySelector('.mini_popup_wrapper')
  const icon_wrapper = shadow.querySelector('.icon_wrapper')
  // ----------------------------------------
  // ELEMENTS
  // ----------------------------------------
  const icons_data = [{
    name: 'mission_ statement',
    type: '.md',
    img: icon_pdf_reader,
    window: 'mission_statement'
  },{
    name: 'important_ documents',
    type: '.md',
    img: icon_pdf_reader,
    window: 'important_documents'
  },{
    name: 'our_ member',
    type: '.md',
    img: icon_pdf_reader,
    window: 'our_member'
  },{
    name: 'tools',
    type: '',
    img: icon_folder,
    window: 'tools'
  }]
  icon_wrapper.append(...icons_data.map(icon_data => {
    const { name, type, img: source, window } = icon_data
    const label = `${name}${type}`
    const icon = shadowfy()(app_icon({ source, label }))
    icon.ondblclick = () => {PROTOCOLS['notify_'+window]()}
    icon.ontouchend = () => {PROTOCOLS['notify_'+window]()}
    return icon
  }))
  mini_popup_wrapper.append(
    shadowfy()(important_documents({ data }, consortium_protocol)),
    shadowfy()(our_member({ data }, consortium_protocol)),
    shadowfy()(tools({ data }, consortium_protocol))
  )
  popup_wrapper.append(shadowfy()(mission_statement({ data }, consortium_protocol)))
  // ----------------------------------------
  // INIT
  // ----------------------------------------

  return el

  function shadowfy (props = {}, sheets = []) {
    return element => {
      const el = Object.assign(document.createElement('div'), { ...props })
      const sh = el.attachShadow(shopts)
      sh.adoptedStyleSheets = sheets
      sh.append(element)
      return el
    }
  }
  function consortium_protocol (handshake, send, mid = 0) {
    PROTOCOLS['notify_'+handshake.from] = send
  }
}
function get_theme () {
  return `
    .main_wrapper {
      box-sizing: border-box;
      container-type: inline-size;
      display: flex;
      gap: 20px;
      justify-content: space-between;
      margin: 0;
      padding:30px 10px;
      opacity: 1;
      background-size: 16px 16px;
      .icon_wrapper {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        gap: 25px;
        width: fit-content;
        height: fit-content;
        align-items: center;
        user-select: none;
        &:hover {
          cursor: default;
        }
      }
      .popup_wrapper {
        display: inline;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 20;
        .mini_popup_wrapper {
          display: flex;
          flex-direction: column;
          width: 100%;
        }
      }
    }
    @container (min-width: 510px) {
      .main_wrapper {
        .icon_wrapper {
          flex-direction: column;
        }
        .main_wrapper {
          flex-direction: row;
        }
        .popup_wrapper {
          display: flex;
          flex-direction: column;
          position: relative;
          top: 0;
        }
      }
    }
    @container (min-width: 768px) {
      .main_wrapper {
        .popup_wrapper {
          margin-left: 100px;
        }
      }
    }
    @container (min-width: 1200px) {
      .main_wrapper {
        .popup_wrapper {
          flex-direction: row;
          gap: 20px;
          margin-left: 200px;
        }
      }
    }
  `
}