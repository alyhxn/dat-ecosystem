const window_bar = require('window-bar')

const sheet = new CSSStyleSheet
sheet.replaceSync(get_theme())
/******************************************************************************
  COMING SOON COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const default_opts = { }

module.exports = commingsoon

function commingsoon (opts = default_opts, protocol) {
  // ----------------------------------------
  // ID + JSON STATE
  // ----------------------------------------
  const name = `commingsoon-${count++}`
  // ----------------------------------------
  // OPTS
  // ----------------------------------------
  const { data } = opts
  // Assigning all the icons
  const { img_src } = data
  const {
    banner_cover = `${prefix}/banner_cover.svg`,
    tree_character = `${prefix}/tree_character.png`,
    icon_pdf_reader
  } = img_src
  // ----------------------------------------
  // PROTOCOL
  // ----------------------------------------
  const PROTOCOL = {}
  // ----------------------------------------
  // TEMPLATE
  // ----------------------------------------
  const el = document.createElement('div')
  const shadow = el.attachShadow ({ mode : 'closed' })
  shadow.innerHTML = `<div class="cover_wrapper">
    <div class="cover_content">
      <div class="cover_image">
        <img src="${banner_cover}" />
      </div>
      <div class="content_wrapper">
        <img src="${tree_character}" />
        Coming Soon
      </div>
    </div>
  </div>`
  shadow.adoptedStyleSheets = [sheet]
  const cover_wrapper = shadow.querySelector('.cover_wrapper')
  // ----------------------------------------
  // ELEMENTS
  // ----------------------------------------
  const cover_window = window_bar({
    name: 'Coming_soon.pdf', 
    src: icon_pdf_reader,
    data: data
  }, cover_protocol)
  cover_wrapper.prepend(cover_window)
  // ----------------------------------------
  // INIT
  // ----------------------------------------

  return el

  // cover protocol
  function cover_protocol (message, send) {
    return listen
  }
  // Listening to toggle event 
  function listen (message) {
    const { head, refs, type, data, meta } = message  
    const PROTOCOL = {
      'toggle_active_state': toggle_active_state
    }
    const action = PROTOCOL[type] || invalid      
    action(message)
  }
  function invalid (message) { console.error('invalid type', message) }
  async function toggle_active_state (message) {
    const { head, refs, type, data, meta } = message
    const { active_state } = data
    ;( active_state === 'active')?cover_wrapper.style.display = 'none':''
  }
}
function get_theme () {
  return `
    * {
      box-sizing: border-box;
    }
    .cover_content {
      position: relative;
      height: max-content;
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 150px 0px;
      background-image: radial-gradient(var(--primary_color) 1px, var(--bg_color) 1px);
      background-size: 10px 10px;
      background-color: var(--bg_color);
      border: 1px solid var(--primary_color);
      margin-bottom: 30px;
      /* This covers background-image will change to an image */
      .cover_image {
        position: absolute;
        width: 100%;
        height: 100%;
        overflow: hidden;
        img {
          position: absolute;
          left: 50%;
          top: 50%;
          width: auto;
          height: 100%;
          transform: translate(-50%, -50%);
        }
      }
      /* Cover image alignment */
      .content_wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        position: relative;
        z-index: 1;
        color: var(--primary_color);
        text-align: center;
        img {
          width: 300px;
          height: auto;
        }
      }
    }
  `
}