const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)

let id = 0

module.exports = year_filter

function year_filter (opts, protocol) {
    const { latest_date } = opts
    const name = 'year_filter-' + id++
    const notify = protocol({ from: name }, listen)
    const el = document.createElement('div')
    const shadow = el.attachShadow({ mode: 'closed' })
    shadow.innerHTML = `
      <div class="year_wrapper"></div>
      <style>${get_theme()}</style>
    `
    let active_state = ''
    const year_buttons = {}
    const year_wrapper = shadow.querySelector('.year_wrapper')
    for (let i = 2013; i <= 2023; i++) {
      const year_button = document.createElement('span')
      year_button.classList.add('year_button')
      year_button.innerHTML = i.toString()
      year_button.onclick = toggle_active_state
      year_buttons[i.toString()] = year_button
      year_wrapper.append(year_button)
    }
  const year = new Date(latest_date).getFullYear()
  on_active_state(year)
  shadow.adoptedStyleSheets = [sheet]
  
  return el

  function toggle_active_state (e) {
    if (active_state)
      year_buttons[active_state].classList.toggle('active')
    if (active_state === e.target.innerHTML)
      active_state = ''
    else {
      active_state = e.target.innerHTML
      e.target.classList.toggle('active')
    }
    notify({
      head: { by: name, to: 'app_timeline', mid: 0 },
      type: 'setScroll',
      data: { value: active_state, filter: 'YEAR' }
    })
  }
  function on_active_state (year_button) {
    if (active_state) year_buttons[active_state].classList.remove('active')
    year_buttons[year_button].classList.add('active')
    active_state = year_button
  }
  function listen (message) {
    const { head,  refs, type, data, meta } = message
    const { by, to, mid } = head
    on_active_state(data)
  }
}
function get_theme () {
  return `
    .year_wrapper {
      --s: 20px; /* control the size */
      --_g: var(--bg_color) /* first color */ 0 25%, #0000 0 50%;
      background:
        repeating-conic-gradient(at 66% 66%,var(--_g)),
        repeating-conic-gradient(at 33% 33%,var(--_g)),
        var(--primary_color);  /* second color */ 
      background-size: var(--s) var(--s);
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      width: 94px;
      height: 100%;
      border: 1px solid var(--primary_color);
      box-sizing: border-box;
      .year_button {
        display: block;
        text-align: center;
        background-color: var(--bg_color);
        border: 1px solid var(--primary_color);
        padding: 4px 10px;
        cursor: pointer;
        &.active {
          background-color: var(--ac-1);
          color: var(--primary_color);
        }
      }
    }
  `
}