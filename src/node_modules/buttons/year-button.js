const sheet = new CSSStyleSheet
sheet.replaceSync(get_theme())
/******************************************************************************
  WINDOW BAR COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const default_opts = { }

module.exports = year_button

function year_button (opts = default_opts, protocol) {
  // ----------------------------------------
  // ID + JSON STATE
  // ----------------------------------------
  const name = 'year_button'
  // ----------------------------------------
  // OPTS
  // ----------------------------------------
  const { data, latest_date } = opts
  const { img_src : {
    icon_arrow_up= `${prefix}/icon_arrow_up.svg`,
  }} = data
  // ----------------------------------------
  // PROTOCOL
  // ----------------------------------------
  const notify = protocol({ from: name }, listen)
  // ----------------------------------------
  // TEMPLATE
  // ----------------------------------------
  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })
  const date = new Date(latest_date)
  shadow.adoptedStyleSheets = [sheet]
  shadow.innerHTML = `<div class="year_button">
    <div class="text_wrapper">${date.getFullYear()}</div>
    ${icon_arrow_up}
  </div>`
  const year_button = shadow.querySelector('.year_button')
  const text_wrapper = shadow.querySelector('.text_wrapper')
  // ----------------------------------------
  // ELEMENTS
  // ----------------------------------------
  year_button.onclick = toggle_class
  // ----------------------------------------
  // INIT
  // ----------------------------------------

  return el

  function toggle_class (e) {
    year_button.classList.toggle('active')
  }
  function listen (message) {
    const { head,  refs, type, data, meta } = message
    const { by, to, id } = head
    if (data.month || data.year) text_wrapper.innerHTML = `<b>${data.month.slice(0,3)}</b>${data.month && data.year && '/'}${data.year}`
    else text_wrapper.innerHTML = 'Select date'
  }
}
function get_theme () {
  return `
    .year_button {
      display: flex;
      cursor: pointer;
      box-sizing: border-box;
      border: 1px solid var(--primary_color);
      background-color: var(--bg_color);
      color: var(--primary_color);
      align-items: center;
      justify-content: center;
      padding: 0 4px;
      height: 30px;
      width: 100%;
      &.active svg {
        rotate: 90deg;
      }
      .text_wrapper {
        text-align: center;
        font-size: 0.875em;
        line-height: .5em;
        padding: 11px 0;
        height: 30px;
        box-sizing: border-box;
        width: 100px;
        letter-spacing: -1px;
      }
    }
  `
}