// CSS Boiler Plat
const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)

module.exports = day_button

// Props - icon/img src
function day_button (protocol) {
  const name = `day_button`
  const notify = protocol({ from: name }, listen)
  const PROTOCOL = {
    toggle_active,
    add_highlight,
    remove_highlight
  }
  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })
  shadow.innerHTML = `<div class="day_button"></div>`
  const day_button = shadow.querySelector(".day_button")
  // Toggle Icon
  day_button.onclick = (e) => {
    toggle_active()
    notify({
      head: { by: name, to: 'month_card', mid: 0 },
      type: 'toggle_day_button',
      data: el.id
    })
  }
  const style = document.createElement('style')
  style.textContent = get_theme()
  shadow.append(day_button, style)
  shadow.adoptedStyleSheets = [sheet]

  return el

  function listen (message) {
    const { head,  refs, type, data, meta } = message
    const { by, to, mid } = head
    PROTOCOL[type]()
  }
  function toggle_active () {
    day_button.classList.toggle('active')
  }
  function add_highlight () {
    day_button.classList.add('highlight')
  }
  function remove_highlight () {
    day_button.classList.remove('highlight')
  }
}
function get_theme () {
  return`
    .day_button {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 20px;
      box-sizing: border-box;
      aspect-ratio: 1/1;
      cursor: pointer;
      border: 1px solid var(--primary_color);
      background-color: var(--bg_color);
      &.active {
        background-color: var(--ac-1) !important;
      }
      &.highlight {
        background-color: var(--ac-2)
      }
    }
  `
}