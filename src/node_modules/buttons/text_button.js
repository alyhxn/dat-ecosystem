
const sheet = new CSSStyleSheet

sheet.replaceSync(get_theme())
/******************************************************************************
  TEXT COMPONENT
******************************************************************************/
var count = 0
const ID = __filename
const STATE = { ids: {}, hub: {} } // all state of component module
// ----------------------------------------

module.exports = text_button

function text_button (opts, protocol) {
  // ----------------------------------------
  // INSTANCE STATE & ID
  const id = `${ID}:${count++}` // assigns their own name
  const state = STATE.ids[id] = { status: {}, wait: {}, hub: {}, aka: {} } // all state of component instance
  // ----------------------------------------
  // opts
  const { text } = opts
  const $text = text // @TODO: make it subscribable signals
  // make it a signal: load initial + listen updates
  // ----------------------------------------
  // protocol
  const on = { 'activate': onactivate, 'inactivate': oninactivate }
  const send = protocol(Object.assign(listen, { id }))
  function invalid (message) { console.error('invalid type', message) }
  function listen (message) {
    console.log(`[${id}]`, message)
    const action = on[message.type] || invalid
    action(message)
  }
  // ----------------------------------------
  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })
  shadow.innerHTML = `<div class="text_button">${$text}</div>`
  const [text_button] = shadow.children
  text_button.onclick = toggle_class
  shadow.adoptedStyleSheets = [sheet]

  return el
  function oninactivate (message) {
    state.status.active = false
    text_button.classList.toggle('active', state.status.active)
  }
  function onactivate (message) {
    state.status.active = true
    text_button.classList.toggle('active', state.status.active)
  }
  function toggle_class (e) {
    const [by, to, mid] = [id, send.id, 0]
    let message = { head: [by, to, mid], type: 'click' }
    send(message)
  }
}
function get_theme () {
  return `
    .text_button {
      text-align: center;
      font-size: 0.875em;
      line-height: 1.5714285714285714em;
      padding: 10px 5px;
      height: 40px;
      box-sizing: border-box;
      width: 100%;
      cursor: pointer;
      border: 1px solid var(--primary_color);
      background-color: var(--bg_color);
      color: var(--primary_color);
      &.active {
        background-color: var(--ac-1);
        color: var(--bg_color);
      }
    }
  `
}