module.exports = text_button


// CSS Boiler Plat
const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)


var id = 0


function text_button (props, protocol) {

    const name = `text_button_${id++}`
    const {text} = props
    const [notify, parent_name] = protocol(listen, name)
    let message = {
        head: {by:'text_button', to:parent_name, mid:0},
        type: 'handle_page_change',
    }
    function listen(message){
        const {head,  refs, type, data, meta} = message
        const [by, to, id] = head
        text_button.classList.toggle('active', data === text);
    }

    const el = document.createElement('div')
    const shadow = el.attachShadow({mode:'closed'})

    shadow.innerHTML = `
        <div class="text_button">${props.text}</div>
        <style>${get_theme()}</style>
    `
    const text_button = shadow.querySelector('.text_button')
    text_button.onclick = (e) => toggle_class(e)

    shadow.adoptedStyleSheets = [sheet]
    return el

    function toggle_class(e){
        message['data'] = text_button.classList.contains('active') ? 'DEFAULT' : text;
        notify(message)
    }
}



function get_theme(){
    return`
        .text_button{
            text-align:center;
            font-size: 0.875em;
            line-height: 1.5714285714285714em;
            padding:10px 5px;
            height:40px;
            box-sizing:border-box;
            width: 100%;
            cursor:pointer;
            border: 1px solid var(--primary_color);
            background-color: var(--bg_color);
            color:var(--primary_color);
        }
        .text_button.active{
            background-color: var(--ac-1);
            color: var(--primary_color);
        }
    `
}