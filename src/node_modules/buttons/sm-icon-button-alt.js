const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)
/******************************************************************************
  DESKTOP COMPONENT
******************************************************************************/
var count = 0
const ID = __filename
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const default_opts = { toggle: false }

module.exports = sm_icon_button_alt

// opts - icon/img src
function sm_icon_button_alt (opts = default_opts, protocol) {
  // ----------------------------------------
  // INSTANCE STATE & ID
  // ----------------------------------------
  const id = `${ID}:${count++}` // assigns their own name
  const status = {}
  const state = STATE.ids[id] = { id, status, wait: {}, net: {}, aka: {} } // all state of component instance
  const name = id
  // ----------------------------------------
  // PROTOCOL
  // ----------------------------------------
  const send = protocol({ from:name }, msg => {})
  // ----------------------------------------
  // OPTS
  // ----------------------------------------
  let { toggle, src, src_active } = opts
  // ----------------------------------------
  // TEMPLATE
  // ----------------------------------------
  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode:'closed' })
  shadow.innerHTML = `<div class="sm_icon_button_alt">${src}</div>`
  shadow.adoptedStyleSheets = [sheet]
  const sm_icon_button_alt = shadow.querySelector('.sm_icon_button_alt')
  // ----------------------------------------
  // TEMPLATE
  // ----------------------------------------
  let active_state = true
  sm_icon_button_alt.onclick = onclick

  return el

  function onclick (e) {
    send?.({
      head: { by: name, to: 'window_bar_0', mid: 0 },
      type: 'click',
      data: { active_state }
    })
    if (!toggle) return
    if (src_active) {
      sm_icon_button_alt.innerHTML = active_state ? src_active : src
    }
    sm_icon_button_alt.classList.toggle('active', active_state)
    active_state = !active_state
  }
}
function get_theme () {
  return`
    .sm_icon_button_alt {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 30px;
      box-sizing: border-box;
      aspect-ratio: 1/1;
      cursor: pointer;
      border: 1px solid var(--bg_color);
      background-color: var(--primary_color);
      &:active {
        background-color: var(--ac-2)
      }
      &.active {
        background-color: var(--ac-2)
      }
      svg, svg * {
        pointer-events:none !important;
      }
    }
  `
}