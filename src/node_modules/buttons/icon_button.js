
const sheet = new CSSStyleSheet

sheet.replaceSync(get_theme())
/******************************************************************************
  ICON COMPONENT
******************************************************************************/
var count = 0
const ID = __filename
const STATE = { ids: {}, hub: {} } // all state of component module
// ----------------------------------------

module.exports = icon_button

function icon_button (opts, protocol) {
  // ----------------------------------------
  // INSTANCE STATE & ID
  const id = `${ID}:${count++}` // assigns their own name
  const state = STATE.ids[id] = { status: {}, wait: {}, hub: {}, aka: {} } // all state of component instance
  // ----------------------------------------
  let { src, src_active } = opts // opts - icon/img src
  // ----------------------------------------
  // protocol
  let send
  if (!protocol) console.log("NO PROTOCOL")
  if (protocol) {
    const on = { 'activate': onactivate, 'inactivate': oninactivate }
    send = protocol(Object.assign(listen, { id }))
    function listen (message) {
      console.log(`[${id}]`, message)
      const action = on[message.type] || invalid
      action(message)
    }
  }
  // ----------------------------------------
  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })
  shadow.innerHTML = `<div class="icon_btn">${src}</div>`
  const [icon_button] = shadow.children
  // Toggle Icon
  state.active = true
  icon_button.onclick = src_active ? toggle_class_and_src : toggle_class
  shadow.adoptedStyleSheets = [sheet]

  return el

  function oninactivate (message) {
    state.status.active = false
    icon_button.classList.toggle('active', state.status.active)
  }
  function onactivate (message) {
    state.status.active = true
    icon_button.classList.toggle('active', state.status.active)
  }
  function toggle_class_and_src (e) { // e.g. for mobile first dropdown button
    console.log('TOGGLE CLASS AND SRC', protocol)
    ;icon_button.innerHTML = state.active ? src_active : src
    state.active = !state.active
    toggle_class(e)
  }
  function toggle_class (e) {
    if (protocol) {
      const channel = state.hub[send.id]
      console.log('CHANNEL', channel)
      const [by, to, mid] = [id, send.id, 0]
      let message = { head: [by, to, mid], type: 'click' }
      send(message)
    } else e.target.classList.toggle('active')
  }
}
function get_theme () {
  return`
    .icon_btn {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 40px;
      box-sizing: border-box;
      aspect-ratio: 1/1;
      cursor: pointer;
      border: 1px solid var(--primary_color);
      background-color: var(--bg_color);
    }
    .icon_btn svg {
      height: 25px;
      width: 25px;
      pointer-events: none;
    }
    .icon_btn svg * {
      pointer-events: none;
    }
    .icon_btn.active {
      background-color: var(--ac-2)
    }
  `
}