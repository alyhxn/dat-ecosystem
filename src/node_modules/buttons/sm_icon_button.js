// CSS Boiler Plat
const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)

var id = 0

module.exports = sm_icon_button_alt

// opts - icon/img src
function sm_icon_button_alt (opts, protocol) {
    const name = `sm_icon_button_alt_${id++}`
    let { src, src_active } = opts
    const el = document.createElement('div')
    const shadow = el.attachShadow({ mode:'closed' })
    shadow.innerHTML = `
      <div class="sm_icon_button_alt"> 
        ${src}
      </div>
      <style>${get_theme()}</style>
    `
  const sm_icon_button_alt = shadow.querySelector('.sm_icon_button_alt')
  // Toggle Icon
  if (protocol) { 
    const send = protocol({ from:name }, listen) 
    function listen (message) {
      // 
    }
    let active_state = true
    sm_icon_button_alt.onclick = (e) => {
      if (src_active) {
        ;(active_state)?sm_icon_button_alt.innerHTML = src_active: sm_icon_button_alt.innerHTML = src
        active_state = !active_state
        toggle_class(e)
      } else toggle_class(e)
      send({
        head: {
          by: name,
          to: 'window_bar_0',
          mid: 0,
        },
        type: 'toggle_window_active_state', 
        data: { active_state } 
      })
    }
  }
  shadow.adoptedStyleSheets = [sheet]

  return el

  function toggle_class (e) {
    let selector = e.target.classList
    ;( selector.contains('active') ) ? selector.remove('active') : selector.add('active')
  }
}
function get_theme () {
  return`
    .sm_icon_button_alt {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 30px;
      box-sizing: border-box;
      aspect-ratio: 1/1;
      cursor: pointer;
      border: 1px solid var(--bg_color);
      background-color: var(--primary_color);
      &.active {
        background-color: var(--ac-2)
      }
      svg, svg * {
        pointer-events:none !important;
      }
    }
  `
}