module.exports = navbar

const path = require('path')
const cwd = process.cwd()
const prefix = path.relative(cwd, __dirname)


const icon_button = require('buttons/icon_button')
const logo_button = require('buttons/logo_button')
const text_button = require('buttons/text_button')


// CSS Boiler Plat
const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)


// Setting component id
var id = 0


function navbar(opts, protocol){

    const {data} = opts

    const name = `navbar-${id++}`

    const notify = protocol({from: name}, listen)
    function listen(message){
        const {head,  refs, type, data, meta} = message
        // const [by, to, id] = head
        handle_active_change(data)
    }

    const PROTOCOL = {
        active_page: 'HOME',
        controls: {}
    }

    // Assigning all the icons
    const {img_src} = data
    const {
        icon_consortium,
        icon_blogger,
        icon_discord,
        icon_twitter,
        icon_github,
        icon_terminal,
        icon_theme,
        icon_arrow_down,
        icon_arrow_up
    } = img_src


    const el = document.createElement('div')
    const shadow = el.attachShadow({mode:'closed'})

    shadow.innerHTML = `
    <div class="navbar_wrapper">
        <div class="navbar">
            <div class="nav_toggle_wrapper">
                <div class="logo_button_wrapper"></div>
                <div class="nav_toggle"></div>
            </div>
            <div class="page_btns_wrapper"></div>
            <div class="icon_btn_wrapper"></div>
        </div>
    </div>
    <style>${get_theme()}</style>
  `
    
    // sm nav buttons
    const consortium_btn = icon_button({src:icon_consortium}, navbar_protocol)
    const logo_btn = logo_button()
    const nav_toggle_wrapper = shadow.querySelector('.nav_toggle_wrapper')
    const logo_button_wrapper = shadow.querySelector('.logo_button_wrapper')
    nav_toggle_wrapper.prepend(consortium_btn)
    logo_button_wrapper.append(logo_btn)


    // adding nav toggle button
    const nav_toggle_btn = icon_button({ src: icon_arrow_down, src_active: icon_arrow_up });
    const nav_toggle = shadow.querySelector('.nav_toggle')
    nav_toggle.append(nav_toggle_btn)
    nav_toggle.onclick = event => shadow.querySelector('.navbar').classList.toggle('active');





    // Page List Buttons
    const text_btns = [
        { element: text_button({ text: 'HOME' }, navbar_protocol) },
        { element: text_button({ text: 'PROJECTS' }, navbar_protocol) },
        { element: text_button({ text: 'GROWTH PROGRAM' }, navbar_protocol) },
        { element: text_button({ text: 'TIMELINE' }, navbar_protocol) }
    ]
    const page_btns_wrapper = shadow.querySelector('.page_btns_wrapper')
    text_btns.forEach((button_data) => {
        const text_button_wrapper = document.createElement('div')
        text_button_wrapper.classList.add('text_button_wrapper')
        text_button_wrapper.appendChild(button_data.element)
        page_btns_wrapper.appendChild(text_button_wrapper)
    })





    // Adding social and action buttons
    const icon_btns = [
        {element: icon_button({src:icon_blogger}) },
        {element: icon_button({src:icon_discord}) },
        {element: icon_button({src:icon_twitter}) },
        {element: icon_button({src:icon_github}) },
        {element: icon_button({src:icon_terminal}), type: 'toggle_terminal' },
    ]

    icon_btns.forEach(icon_btn => {if(icon_btn.type) icon_btn.element.onclick = e => {
        notify({
            head: {from: name, to: 'page', mid: 0},
            type: icon_btn.type,
            data: ''
        })
    }})
    
    const theme_btn = icon_button({src:icon_theme});
    theme_btn.onclick = e => {
        // send({from: name, type: 'change_theme'})
        const head = {from: name, to: 'page', mid: 0}
        notify({head, type:'handle_theme_change', data: ''})
    };
    const icon_btn_wrapper = shadow.querySelector('.icon_btn_wrapper')
    icon_btn_wrapper.append(...icon_btns.map(button_data => button_data.element), theme_btn)


    function handle_active_change(active_page){
        PROTOCOL.active_page = active_page;
        
        for(const button in PROTOCOL.controls){
            const message = {
                head: [name, button, button],
                type: 'theme',
                data: active_page,
            }
            PROTOCOL.controls[button](message)
        }
    }


    //protocol
    function navbar_protocol(handshake, send, mid = 0){
        
        PROTOCOL.controls[send] = handshake

        if (send) return [listen, name];
        function listen(message){
            const {head,  refs, type, data, meta} = message
            const {by, to, id} = head
            // if( to !== id) return console.error('address unknown', message)

            notify(message)
        }
        

    }


    shadow.adoptedStyleSheets = [sheet]
    return el

}


function get_theme(){
    return`
        .navbar_wrapper{
            container-type: inline-size;
            width: 100%;
        }
        .navbar{
            display: block;
            width:100%;
            height:40px;
            overflow:hidden;
            border-bottom: 1px solid var(--primary_color);

            --s: 15px; /* control the size */
            --_g: var(--bg_color) /* first color */ 0 25%, #0000 0 50%;
            background:
                repeating-conic-gradient(at 33% 33%,var(--_g)),
                repeating-conic-gradient(at 66% 66%,var(--_g)),
                var(--primary_color);  /* second color */ 
            background-size: var(--s) var(--s);                   
        }
        .navbar.active{
            height:max-content;
        }


        /* Starting buttons wrapper */
        .nav_toggle_wrapper{
            display: flex;
            width:100%;
            justify-content:stretch;
        }
        .nav_toggle_wrapper .logo_button_wrapper{
            width:100% !important;
            flex-grow:1;
        }
        .nav_toggle{
            display:block;
        }
        .page_btns_wrapper{
            width:100%;
            display:flex;
            flex-direction:column;
        }
        .page_btns_wrapper .text_button_wrapper{
            width:100%;
            flex-grow:1;
        }
        .icon_btn_wrapper{
            display:flex;
            justify-content:flex-start;
        }










        .page_list{
            display: none;
        }

        @container(min-width: 899px) {

            .navbar{
                display: flex;
            }

            .nav_toggle_wrapper{
                width:max-content;
                display:flex;
            }
            .nav_toggle_wrapper .logo_button_wrapper{
                width: max-content !important;
            }
            .nav_toggle{
                display:none;   
            }
            .page_list{
                display:flex;
            }

            .nav_toggle_wrapper .nav_toggle_btn{
                display: none;
            }
            .page_btns_wrapper{
                flex-direction: row;
            }
            .page_btns_wrapper .text_button_wrapper{
                width:max-content !important;
                flex-grow: unset;
            }
        }
        
        .socials_list{
            display: flex;
        }
    `
}