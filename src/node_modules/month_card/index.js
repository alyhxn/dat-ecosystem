module.exports = month_card

const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)

const day_button = require('buttons/day_button')

let id = 0;

function month_card (opts, protocol) {
    const name = `month_card-${id++}`
    const notify = protocol({from: name}, listen)

    const PROTOCOL = {
        day_toggle: [],
        toggle_day_button,
        toggle_month_button,
        toggle_all_days,
        toggle_day_highlight,
        active_day: 0,
    }

    const el = document.createElement('div')
    const shadow = el.attachShadow({mode: 'closed'})

    shadow.innerHTML = `
        <div class="month_card">
            <span class="month_name"><b>${opts.name}</b></span>
            <div class="days_wrapper"></div>
        </div>
        <style>${get_theme}</style>
    `
    const days_wrapper = shadow.querySelector('.days_wrapper')
    for(let i=1; i<=opts.days; i++){
        const btn = day_button(month_card_protocol)
        btn.id = i
        days_wrapper.append(btn)
    }
    
    const month_name = shadow.querySelector('.month_name')
    month_name.onclick = e => {
        notify({
            head: {by:name, to:'month_filter', mid: 0},
            type: 'toggle_month_button',
            data: opts.name
        })
    }

    shadow.adoptedStyleSheets = [sheet]
    return el

    function month_card_protocol(handshake, send){
        PROTOCOL['day_toggle'].push(send)
        return listen
        function listen (message){
            const {head, type, data} = message
            const {by, to, mid} = head
            PROTOCOL[type](data)
        }
    }
    async function toggle_day_button(data){
        notify({
            head: {by:name, to:'month_filter', mid: 0},
            type: 'toggle_day_button',
            data: opts.name + ' ' + data
        })
    }
    function listen (message){
        const {head, type, data} = message
        const {by, to, mid} = head
        PROTOCOL[type](data)
    }
    async function toggle_month_button (data) {
        month_name.classList.toggle('active')
    }
    async function toggle_all_days (data){
        const day = new Date(data).getDate()
        PROTOCOL.day_toggle[day-1]({
            head: {by:name, to:'day_button', mid: 0},
            type: 'toggle_active',
            data: ''
        })
    }
    async function toggle_day_highlight (data){
        const {mode, date} = data
        const day = new Date(date).getDate()
        PROTOCOL.day_toggle[day-1]({
            head: {by:name, to:'day_button', mid: 0},
            type: mode,
            data: ''
        })
    }
}

function get_theme() {
    return `
    .month_card {
        width: 140px;
        height: 130px;
        border: 1px solid var(--primary_color);
        border-right-width: 4px;
        background-color: var(--bg_color);
        margin-top: -1px;
        margin-left: -1px;
    }
    .month_name {
        display: block;
        text-align: center;
        padding: 5px 0;
        cursor: pointer;
    }
    .month_name.active{
        background-color: var(--ac-1)
    }
    .days_wrapper {
        display: flex;
        flex-wrap: wrap;
        border-top: 1px solid var(--primary_color);
        
    }
    `
}