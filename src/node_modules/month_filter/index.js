module.exports = month_filter

const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)

const month_card = require('month_card')
const scrollbar = require('scrollbar_hor')

let id = 0

function month_filter (opts, protocol) {

    const name = `month_filter-${id++}`
    const notify = protocol({from: name}, listen)

    const PROTOCOL = {}
    let active_state = '';
    const month_buttons = {}

    const el = document.createElement('div')
    const shadow = el.attachShadow({mode: 'closed'})

    shadow.innerHTML = `
        <div class="scrollbar_wrapper">
            <div class="month_filter_wrapper"></div>
        </div>
        <style>${get_theme}</style>
    `

    const month_data = [
        {name: 'January', days: 31},
        {name: 'February', days: 28},
        {name: 'March', days: 31},
        {name: 'April', days: 30},
        {name: 'May', days: 31},
        {name: 'June', days: 30},
        {name: 'July', days: 31},
        {name: 'August', days: 31},
        {name: 'September', days: 30},
        {name: 'October', days: 31},
        {name: 'November', days: 30},
        {name: 'December', days: 31},
    ]

    const month_filter_wrapper = shadow.querySelector('.month_filter_wrapper')
    month_data.forEach(month => {
        month_buttons[month.name] = month_card(month, month_filter_protocol)
        month_filter_wrapper.append(month_buttons[month.name])
    })

    const scrollbar_wrapper = shadow.querySelector('.scrollbar_wrapper')
    scrollbar_wrapper.append(scrollbar( opts, month_filter_protocol))

    shadow.adoptedStyleSheets = [sheet]
    return el

    function month_filter_protocol(handshake, send){
        if(handshake.from.includes('scrollbar')){
            month_filter_wrapper.onscroll = send[0]
            const ro = new ResizeObserver(entries => send[0]());
            ro.observe(scrollbar_wrapper);
            PROTOCOL['handleScroll'] = send[0]
            PROTOCOL['getScrollInfo'] = send[1]
            return [listen, setScrollLeft]
        }
        if(handshake.from.includes('month_card')){
            PROTOCOL['toggle_active_state'] = toggle_active_state
            PROTOCOL['toggle_day_button'] = toggle_day_button
            PROTOCOL[handshake.from] = send
        }
        return listen
        function listen (message){
            const {head, type, data} = message
            const {by, to, mid} = head
            // if( to !== name) return console.error('address unknown', message)
            if(by.includes('scrollbar'))
            {
                message.data = {sh: month_filter_wrapper.scrollWidth, ch: month_filter_wrapper.clientWidth, st: month_filter_wrapper.scrollLeft}
                PROTOCOL.getScrollInfo(message)
            }
            else if(by.includes('month_card'))
                PROTOCOL[type](by, data)
        }
        async function setScrollLeft(value){
            month_filter_wrapper.scrollLeft = value
        }
        async function toggle_active_state(by, data){
            if(active_state)
                PROTOCOL[active_state](null)
                
            if(active_state === by){
                active_state = ''
                data = ''
            }
            else{
                active_state = by
                PROTOCOL[by](null)
            }

            notify({
                head: {by: name, to: 'app_timeline', mid: 0},
                type: 'setFilter',
                data: {filter: 'MONTH', value: data}
            })
        }
        async function toggle_day_button (by, data){
            console.log(data)
        }
    }

    function listen(message){

    }
}

function get_theme() {
    return `
    .month_filter_wrapper {
        display: flex;
        height: 131px;
        width: 100%;
        border: 1px solid var(--primary_color);
        overflow: scroll;
    }
    .month_filter_wrapper::-webkit-scrollbar {
        display: none;
    }

    `
}