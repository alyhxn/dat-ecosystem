const day_button = require('buttons/day-button')

const sheet = new CSSStyleSheet
sheet.replaceSync(get_theme())
/******************************************************************************
  MONTH CARD COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const default_opts = { }

module.exports = month_card

function month_card (opts = default_opts, protocol) {
  // ----------------------------------------
  // ID + JSON STATE
  // ----------------------------------------
  const name = `month_card-${count++}`
  // ----------------------------------------
  // OPTS
  // ----------------------------------------
  const { name: label, days } = opts
  // ----------------------------------------
  // PROTOCOL
  // ----------------------------------------
  const notify = protocol({ from: name }, listen)
  const PROTOCOL = {
    day_toggle: [],
    toggle_day_button,
    toggle_month_button,
    toggle_all_days,
    toggle_day_highlight,
    active_day: 0,
  }
  // ----------------------------------------
  // TEMPLATE
  // ----------------------------------------
  const el = document.createElement('div')
  const shopts = { mode: 'closed' }
  const shadow = el.attachShadow(shopts)
  shadow.adoptedStyleSheets = [sheet]
  shadow.innerHTML = `<div class="month_card">
    <span class="month_name"><b>${label}</b></span>
    <div class="days_wrapper"></div>
  </div>`
  const days_wrapper = shadow.querySelector('.days_wrapper')
  const month_name = shadow.querySelector('.month_name')
  // ----------------------------------------
  // ELEMENTS
  // ----------------------------------------
  for (let i = 1; i <= days; i++) {
    const btn = shadowfy()(day_button(month_card_protocol))
    days_wrapper.append(btn)
  }
  month_name.onclick = e => {
    notify({
      head: { by:name, to:'month_filter', mid: 0 },
      type: 'toggle_month_button',
      data: label
    })
  }
  // ----------------------------------------
  // INIT
  // ----------------------------------------

  return el

  function shadowfy (props = {}, sheets = []) {
    return element => {
      const el = Object.assign(document.createElement('div'), { ...props })
      const sh = el.attachShadow(shopts)
      sh.adoptedStyleSheets = sheets
      sh.append(element)
      return el
    }
  }
  function month_card_protocol (handshake, send) {
    PROTOCOL['day_toggle'].push(send)
    return listen
    function listen (message) {
      const { head,  refs, type, data, meta } = message
      const { by, to, mid } = head
      PROTOCOL[type](data)
    }
  }
  async function toggle_day_button (data) {
    notify({
      head: { by: name, to:'month_filter', mid: 0 },
      type: 'toggle_day_button',
      data: opts.name + ' ' + data
    })
  }
  function listen (message) {
    const { head,  refs, type, data, meta } = message
    const { by, to, mid } = head
    PROTOCOL[type](data)
  }
  async function toggle_month_button (data) {
    month_name.classList.toggle('active')
  }
  async function toggle_all_days (data) {
    const day = new Date(data).getDate()
    PROTOCOL.day_toggle[day-1]({
      head: { by:name, to:'day_button', mid: 0 },
      type: 'toggle_active',
      data: ''
    })
  }
  async function toggle_day_highlight (data) {
    const { mode, date } = data
    const day = new Date(date).getDate()
    PROTOCOL.day_toggle[day-1]({
      head: { by: name, to: 'day_button', mid: 0 },
      type: mode,
      data: ''
    })
  }
}
function get_theme () {
  return `
    .month_card {
      /* box-sizing: border-box; */
      width: 140px;
      height: 130px;
      border: 1px solid var(--primary_color);
      border-right-width: 4px;
      background-color: var(--bg_color);
      margin-top: -1px;
      margin-left: -1px;
      .month_name {
        display: block;
        text-align: center;
        padding: 5px 0;
        cursor: pointer;
        &.active {
          background-color: var(--ac-1)
        }
      }
      .days_wrapper {
          display: flex;
        flex-wrap: wrap;
        border-top: 1px solid var(--primary_color);
      }
    }
  `
}